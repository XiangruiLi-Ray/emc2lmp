(* EMC: Script *)

(* Created by emc_setup.pl v4.1.5, March 30, 2024
   on Sat Sep 14 10:01:43 PDT 2024 *)

(* define variables *)

variables	= {
  seed		-> -1,
  ntotal	-> 10000,
  fshape	-> 1,
  output	-> "polymer",
  field		-> "opls/2012/opls-aa",
  location1	-> "~/pkgs/emc-v9.4.4/field/",

  nav		-> 0.6022141179,
  temperature	-> 300,
  radius	-> 5,
  nrelax	-> 100,
  weight_nonbond -> 0.0001,
  weight_bond	-> 0.0001,
  weight_focus	-> 1,
  cutoff	-> 9.5,
  charge_cutoff	-> 9.5,
  kappa		-> 4,

  density1	-> 0.01,
  lprevious	-> 0,
  lphase	-> 0,

  f_poly	-> 1,

  chem_ethyl	-> "*CC*",
  chem_propyl	-> "*CC(C)*",
  chem_methyl	-> "*C"
};

output		= {
  debug		-> false,
  exit		-> true,
  info		-> true,
  warning	-> true
};

(* define force field *)

field		= {
  id		-> opls-aa,
  mode		-> opls,
  name		-> {location1+field+".prm", location1+field+".top"},
  compress	-> false
};

(* define groups *)

groups		= {
  group		-> {
    id		-> ethyl, depth -> 8, chemistry -> chem_ethyl,
    connects	-> {
      {source	-> $end1, destination -> {ethyl, $end2}},
      {source	-> $end1, destination -> {methyl, $end1}},
      {source	-> $end1, destination -> {propyl, $end2}},
      {source	-> $end2, destination -> {ethyl, $end1}},
      {source	-> $end2, destination -> {methyl, $end1}},
      {source	-> $end2, destination -> {propyl, $end1}}
    }
  },
  group		-> {
    id		-> propyl, depth -> 8, chemistry -> chem_propyl,
    connects	-> {
      {source	-> $end1, destination -> {ethyl, $end2}},
      {source	-> $end1, destination -> {methyl, $end1}},
      {source	-> $end1, destination -> {propyl, $end2}},
      {source	-> $end2, destination -> {ethyl, $end1}},
      {source	-> $end2, destination -> {methyl, $end1}},
      {source	-> $end2, destination -> {propyl, $end1}}
    }
  },
  group		-> {
    id		-> methyl, depth -> 8, chemistry -> chem_methyl,
    connects	-> {
      {source	-> $end1, destination -> {ethyl, $end1}},
      {source	-> $end1, destination -> {ethyl, $end2}},
      {source	-> $end1, destination -> {propyl, $end2}},
      {source	-> $end1, destination -> {propyl, $end1}}
    }
  }
};

field		= {
  mode		-> apply,
  check		-> {
    atomistic	-> true,
    charge	-> true
  },
  debug		-> false
};

(* determine simulation sizing *)

variables	= {

  (* lengths *)

  lg_ethyl	-> nsites(ethyl),
  lg_propyl	-> nsites(propyl),
  lg_methyl	-> nsites(methyl),
  norm_poly	-> 100,

  l_poly	-> (20*lg_ethyl+20*lg_propyl+2*lg_methyl)*100/norm_poly,

  (* masses *)

  mg_ethyl	-> mass(ethyl),
  mg_propyl	-> mass(propyl),
  mg_methyl	-> mass(methyl),

  norm_poly	-> 100,

  m_poly	-> (20*mg_ethyl+20*mg_propyl+2*mg_methyl)*100/norm_poly,


  (* sizing *)

  n_poly	-> f_poly,


  (* system sizing *)

  ntotal	-> 0,
  mtotal	-> 0
};

(* define interactions *)

simulation	= {
  units		-> {
    permittivity -> 1,
    seed	-> seed
  },
  types		-> {
    coulomb	-> {
      pair	-> {active -> true, cutoff -> charge_cutoff}
    }
  }
};

(* clusters phase 1 *)

clusters	= {
  progress	-> none,
  polymer	-> {
    id		-> poly, system -> main, type -> alternate,
    n		-> int(100*n_poly/norm_poly+0.5),
    groups	-> {ethyl, propyl, methyl},
    weights	-> {1, 1, 1},
    nrepeat	-> {20, 20, 2}
  }
};

field		= {
  mode		-> apply,
  check		-> {
    atomistic	-> true,
    charge	-> true
  },
  debug		-> false
};

(* build phase 1 *)

types		= {
  opls		-> {
    pair	-> {active -> true, mode -> repulsive}
  }
};

variables	= {
  nphase1	-> ntotal()-ntotal,
  mphase1	-> mtotal()-mtotal,
  vphase1	-> mphase1/nav/density1,
  lbox		-> (vphase1/fshape)^(1/3),
  lphase1	-> fshape*lbox,
  lxx		-> lphase1,
  lyy		-> lbox,
  lzz		-> lbox,
  lzy		-> 0,
  lzx		-> 0,
  lyx		-> 0,
  lphase	-> lphase1,
  ntotal	-> nphase1,
  mtotal	-> mphase1,
  vtotal	-> vphase1
};

build		= {
  system	-> {
    id		-> main,
    split	-> false,
    geometry	-> {xx -> lxx, yy -> lyy, zz -> lzz,
		    zy -> lzy, zx -> lzx, yx -> lyx},
    temperature	-> temperature,
    flag	-> {charge -> true, geometry -> true, map -> true, pbc -> true}
  },
  select	-> {
    progress	-> list,
    frequency	-> 1,
    name	-> "error",
    order	-> random,
    cluster	-> {poly},
    relax	-> {ncycles -> nrelax, radius -> radius},
    grow	-> {
      method	-> energetic,
      check	-> all,
      nbonded	-> 20,
      ntrials	-> 20,
      niterations -> 10000,
      theta	-> 0,
      weight	-> {
	bonded	-> weight_bond, nonbonded -> weight_nonbond,
	focus	-> weight_focus}
    }
  }
};

force		= {style -> none, message -> nkt};
force		= {style -> init, message -> nkt};

(* LAMMPS profile variables *)

variables	= {
  nl_poly	-> nclusters(clusters -> poly)
};

(* focus *)

focus		= {};

(* storage *)

put		= {name -> output, compress -> true};

pdb		= {name -> output, compress -> true, extend -> false,
		   forcefield -> opls, detect -> false, hexadecimal -> false,
		   unwrap -> true, pbc -> true, atom -> index, residue -> index,
		   segment -> index, rank -> false, vdw -> false, cut -> false,
		   fixed -> true, rigid -> true, connectivity -> false,
		   parameters -> false};

lammps		= {name -> output, mode -> put, forcefield -> opls,
		   parameters -> true, types -> false, unwrap -> true,
		   charges -> true, ewald -> true};
